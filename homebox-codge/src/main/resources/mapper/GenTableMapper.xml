<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hapleow.homeboxcodge.dao.GenTableMapper">
    <resultMap id="GenTableResultMap" type="com.hapleow.homeboxcodge.model.GenTable">
        <id property="tableId" column="table_id"/>
        <result property="tableName" column="table_id"/>
        <result property="tableComment" column="table_comment"/>
        <collection property="genColumns" javaType="com.hapleow.homeboxcodge.model.GenColumn"
                    resultMap="GenColumnResultMap"/>
    </resultMap>

    <resultMap id="GenColumnResultMap" type="com.hapleow.homeboxcodge.model.GenColumn">
        <id property="columnId" column="column_id"/>
        <result property="columnTableId" column="column_table_id"/>
        <result property="columnName" column="column_name"/>
        <result property="columnComment" column="column_comment"/>
    </resultMap>


    <select id="list" resultMap="GenTableResultMap">
        select
            table_id       as tableId,
            table_name     as tableName,
            table_comment  as tableComment,
            column_id      as columnId,
            column_name    as columnName,
            column_comment as columnComment
        from gen_table t1
                 inner join gen_column t2 on t1.table_id = t2.column_table_id
    </select>

    <select id="listFromSchema" resultType="com.hapleow.homeboxcodge.model.GenTable">
        select
            table_name    as tableName,
            table_comment as tableComment
        from information_schema.tables
        where table_schema = (select database())
    </select>

    <select id="detail" resultType="com.hapleow.homeboxcodge.model.GenTable">
        select
            table_id      as tableId,
            table_name    as tableName,
            table_comment as tableComment
        from gen_table
        where id = #{id}
    </select>

    <select id="importTable">
        insert into gen_table(table_name,table_comment)
        select table_name,table_comment from information_schema.tables
        where table_name in
        <foreach collection="tables" open="(" close=")" separator="," item="table">
            #{table}
        </foreach>
    </select>


</mapper>
